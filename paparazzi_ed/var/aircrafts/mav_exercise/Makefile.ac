# This file has been generated by gen_aircraft
# Version v5.17_devel-99-gdbb1ea851-dirty
# Please DO NOT EDIT
AC_ID=44

$(TARGET).CFLAGS += -Imodules -Iarch/$(ARCH)/modules

####################################################
# makefile target 'ap' for firmware 'rotorcraft'
####################################################

ifeq ($(TARGET), ap)

../BOARDS/BEBOP_DIR = modules/../boards/bebop
ACTUATORS_DIR = modules/actuators
AHRS_DIR = modules/ahrs
COMPUTER_VISION_DIR = modules/computer_vision
DATALINK_DIR = modules/datalink
GPS_DIR = modules/gps
GUIDANCE_DIR = modules/guidance
IMU_DIR = modules/imu
INS_DIR = modules/ins
LOGGERS_DIR = modules/loggers
MAV_COURSE_EXERCISE_DIR = modules/mav_course_exercise
NAV_DIR = modules/nav
POSE_HISTORY_DIR = modules/pose_history
RADIO_CONTROL_DIR = modules/radio_control
SONAR_DIR = modules/sonar
STABILIZATION_DIR = modules/stabilization

USE_MAGNETOMETER = FALSE

include $(PAPARAZZI_SRC)/conf/boards/bebop.makefile
include $(PAPARAZZI_SRC)/conf/firmwares/rotorcraft.makefile

USE_MAGNETOMETER ?= 1
GPS_LED ?= none
GPS_LED ?= none
GPS_LED ?= none
BEBOP_ACTUATORS_I2C_DEV ?= i2c1
BEBOP_ACTUATORS_I2C_DEV_LOWER = $(shell echo $(BEBOP_ACTUATORS_I2C_DEV) | tr A-Z a-z)
BEBOP_ACTUATORS_I2C_DEV_UPPER = $(shell echo $(BEBOP_ACTUATORS_I2C_DEV) | tr a-z A-Z)
RADIO_CONTROL_DATALINK_LED ?= none
RADIO_CONTROL_LED ?= none
MODEM_BROADCAST ?= TRUE
MODEM_PORT_IN ?= 4243
MODEM_PORT_OUT ?= 4242
MODEM_DEV ?= UDP0
MODEM_DEV_LOWER = $(shell echo $(MODEM_DEV) | tr A-Z a-z)
MODEM_DEV_UPPER = $(shell echo $(MODEM_DEV) | tr a-z A-Z)

$(TARGET).CFLAGS += -DCOLOR_OBJECT_DETECTOR_CR_MAX1=225
$(TARGET).CFLAGS += -DCOLOR_OBJECT_DETECTOR_CR_MIN1=160
$(TARGET).CFLAGS += -DCOLOR_OBJECT_DETECTOR_CB_MAX1=140
$(TARGET).CFLAGS += -DCOLOR_OBJECT_DETECTOR_CB_MIN1=65
$(TARGET).CFLAGS += -DCOLOR_OBJECT_DETECTOR_LUM_MAX1=145
$(TARGET).CFLAGS += -DCOLOR_OBJECT_DETECTOR_LUM_MIN1=40
$(TARGET).CFLAGS += -DFILE_LOGGER_PATH=/data/ftp/internal_000/log
$(TARGET).CFLAGS += -DVIDEO_CAPTURE_PATH=/data/ftp/internal_000/images
$(TARGET).CFLAGS += -DARRIVED_AT_WAYPOINT=0.5
$(TARGET).CFLAGS += -DVIEWVIDEO_QUALITY_FACTOR=40
$(TARGET).CFLAGS += -DVIEWVIDEO_DOWNSIZE_FACTOR=1
$(TARGET).CFLAGS += -DVIEWVIDEO_CAMERA2=bottom_camera
$(TARGET).CFLAGS += -DVIEWVIDEO_CAMERA=front_camera
$(TARGET).CFLAGS += -DMAX_TRACK_CORNERS=10
$(TARGET).CFLAGS += -DOPTICFLOW_DEROTATION_CORRECTION_FACTOR_Y=0.85
$(TARGET).CFLAGS += -DOPTICFLOW_DEROTATION_CORRECTION_FACTOR_X=0.8
$(TARGET).CFLAGS += -DOPTICFLOW_CORNER_METHOD=0
$(TARGET).CFLAGS += -DOPTICFLOW_SUBPIXEL_FACTOR=200
$(TARGET).CFLAGS += -DOPTICFLOW_MAX_TRACK_CORNERS=10
$(TARGET).CFLAGS += -DMAX_HORIZON=10
$(TARGET).CFLAGS += -DOPTICFLOW_CAMERA=front_camera
$(TARGET).CFLAGS += -DCOLOR_OBJECT_DETECTOR_DRAW1=1
$(TARGET).CFLAGS += -DCOLOR_OBJECT_DETECTOR_FPS1=0
$(TARGET).CFLAGS += -DCOLOR_OBJECT_DETECTOR_CAMERA1=front_camera
$(TARGET).CFLAGS += -DVIDEO_CAPTURE_FPS=10
$(TARGET).CFLAGS += -DVIDEO_CAPTURE_CAMERA=front_camera
$(TARGET).CFLAGS += -DAHRS_USE_GPS_HEADING=TRUE

ap.CFLAGS += -Imodules/computer_vision
ap.srcs += modules/computer_vision/lib/encoding/rtp.c
ap.srcs += $(COMPUTER_VISION_DIR)/viewvideo.c
      include $(CFG_SHARED)/udp.makefile
      VIEWVIDEO_HOST        ?= $(MODEM_HOST)
      VIEWVIDEO_PORT_OUT    ?= 5000
      VIEWVIDEO_PORT2_OUT   ?= 6000
      VIEWVIDEO_BROADCAST   ?= TRUE
      VIEWVIDEO_USE_NETCAT  ?= FALSE
      VIEWVID_CFLAGS  = -DVIEWVIDEO_HOST=$(VIEWVIDEO_HOST) -DVIEWVIDEO_PORT_OUT=$(VIEWVIDEO_PORT_OUT) -DVIEWVIDEO_PORT2_OUT=$(VIEWVIDEO_PORT2_OUT)
      ifneq (,$(findstring $(VIEWVIDEO_USE_NETCAT),0 FALSE))
        ap.CFLAGS += $(VIEWVID_CFLAGS) -DVIEWVIDEO_BROADCAST=$(VIEWVIDEO_BROADCAST)
        nps.CFLAGS += $(VIEWVID_CFLAGS) -DVIEWVIDEO_BROADCAST=FALSE
      else
        $(TARGET).CFLAGS += $(VIEWVID_CFLAGS) -DVIEWVIDEO_USE_NETCAT
      endif
ap.srcs += $(POSE_HISTORY_DIR)/pose_history.c
ap.CFLAGS += -D__USE_GNU
ap.CFLAGS += -Imodules/computer_vision
ap.LDFLAGS += -static-libgcc
ap.LDFLAGS += -lrt
ap.srcs += modules/computer_vision/lib/encoding/jpeg.c
ap.srcs += modules/computer_vision/lib/v4l/virt2phys.c
ap.srcs += modules/computer_vision/lib/v4l/v4l2.c
ap.srcs += modules/computer_vision/lib/vision/image.c
ap.srcs += $(COMPUTER_VISION_DIR)/cv.c
ap.srcs += $(COMPUTER_VISION_DIR)/video_thread.c
ap.srcs += $(SONAR_DIR)/agl_dist.c
ap.CFLAGS += -Imodules/computer_vision
ap.srcs += modules/computer_vision/lib/vision/undistortion.c
ap.srcs += modules/computer_vision/lib/vision/edge_flow.c
ap.srcs += modules/computer_vision/lib/vision/lucas_kanade.c
ap.srcs += modules/computer_vision/lib/vision/fast_rosten.c
ap.srcs += modules/computer_vision/lib/vision/act_fast.c
ap.srcs += math/pprz_matrix_decomp_float.c
ap.srcs += math/pprz_algebra_float.c
ap.srcs += modules/computer_vision/opticflow/linear_flow_fit.c
ap.srcs += modules/computer_vision/opticflow/size_divergence.c
ap.srcs += modules/computer_vision/opticflow/opticflow_calculator.c
ap.srcs += $(COMPUTER_VISION_DIR)/opticflow_module.c
ap.srcs += modules/computer_vision/lib/encoding/rtp.c
ap.srcs += modules/computer_vision/lib/encoding/jpeg.c
ap.srcs += modules/computer_vision/lib/vision/image.c
ap.srcs += $(COMPUTER_VISION_DIR)/cv_detect_color_object.c
ap.srcs += $(COMPUTER_VISION_DIR)/video_capture.c
ap.CFLAGS += -DUSE_I2C0
ap.CFLAGS += -DI2C_BUF_LEN=56
ap.srcs += boards/bebop/isp/libisp.c
ap.srcs += $(../BOARDS/BEBOP_DIR)/mt9f002.c
ap.srcs += $(../BOARDS/BEBOP_DIR)/mt9v117.c
ap.srcs += $(MAV_COURSE_EXERCISE_DIR)/mav_exercise.c
ap.srcs += $(LOGGERS_DIR)/file_logger.c
ap.CFLAGS += -DUSE_VFF_EXTENDED
ap.CFLAGS += -DINS_TYPE_H=\"subsystems/ins/ins_int.h\"
ap.srcs += subsystems/ins/vf_extended_float.c
ap.srcs += subsystems/ins/ins_int.c
ap.srcs += subsystems/ins.c
ap.CFLAGS += -DUSE_AHRS_ALIGNER
ap.CFLAGS += -DUSE_AHRS
ifneq ($(AHRS_ALIGNER_LED),none)
ap.CFLAGS += -DAHRS_ALIGNER_LED=$(AHRS_ALIGNER_LED)
endif
ifeq (,$(findstring $(USE_MAGNETOMETER),0 FALSE))
ap.CFLAGS += -DUSE_MAGNETOMETER
endif
ap.srcs += subsystems/ahrs/ahrs_int_cmpl_quat_wrapper.c
ap.srcs += subsystems/ahrs/ahrs_int_cmpl_quat.c
ap.srcs += subsystems/ahrs/ahrs_aligner.c
ap.srcs += subsystems/ahrs.c
ifdef SECONDARY_AHRS
ifneq (,$(findstring $(SECONDARY_AHRS), icq int_cmpl_quat))
# this is the secondary AHRS
$(TARGET).CFLAGS += -DAHRS_SECONDARY_TYPE_H=\"subsystems/ahrs/ahrs_int_cmpl_quat_wrapper.h\"
$(TARGET).CFLAGS += -DSECONDARY_AHRS=ahrs_icq
else
# this is the primary AHRS
$(TARGET).CFLAGS += -DAHRS_TYPE_H=\"subsystems/ahrs/ahrs_int_cmpl_quat_wrapper.h\"
$(TARGET).CFLAGS += -DPRIMARY_AHRS=ahrs_icq
endif
else
# plain old single AHRS usage
$(TARGET).CFLAGS += -DAHRS_TYPE_H=\"subsystems/ahrs/ahrs_int_cmpl_quat_wrapper.h\"
endif
ap.srcs += $(SRC_FIRMWARE)/guidance/guidance_flip.c
ap.srcs += $(SRC_FIRMWARE)/guidance/guidance_v_adapt.c
ap.srcs += $(SRC_FIRMWARE)/guidance/guidance_v_ref.c
ap.srcs += $(SRC_FIRMWARE)/guidance/guidance_v.c
ap.srcs += $(SRC_FIRMWARE)/guidance/guidance_h_ref.c
ap.srcs += $(SRC_FIRMWARE)/guidance/guidance_h.c
ap.CFLAGS += -DUSE_NAVIGATION
ap.srcs += subsystems/navigation/waypoints.c
ap.srcs += subsystems/navigation/common_flight_plan.c
ap.srcs += $(SRC_FIRMWARE)/navigation.c
ap.srcs += $(SRC_FIRMWARE)/stabilization/stabilization_none.c
ap.srcs += $(SRC_FIRMWARE)/stabilization.c
ap.CFLAGS += -DUSE_STABILIZATION_RATE_INDI=true
ap.CFLAGS += -DUSE_STABILIZATION_RATE
ap.srcs += $(SRC_FIRMWARE)/stabilization/stabilization_rate_indi.c
ap.CFLAGS += -DSTABILIZATION_ATTITUDE_INDI_SIMPLE=true
ap.CFLAGS += -DSTABILIZATION_ATTITUDE_TYPE_H=\"stabilization/stabilization_attitude_quat_indi.h\"
ap.CFLAGS += -DSTABILIZATION_ATTITUDE_TYPE_INT
ap.srcs += $(SRC_FIRMWARE)/stabilization/stabilization_attitude_rc_setpoint.c
ap.srcs += $(SRC_FIRMWARE)/stabilization/stabilization_attitude_quat_transformations.c
ap.srcs += $(SRC_FIRMWARE)/stabilization/stabilization_attitude_quat_indi.c
ap.srcs += $(SRC_FIRMWARE)/stabilization/stabilization_indi_simple.c
ifneq ($(GPS_LED),none)
ap.CFLAGS += -DGPS_LED=$(GPS_LED)
endif
ap.CFLAGS += -DUSE_GPS
ap.srcs += subsystems/gps.c
ap.srcs += subsystems/gps/gps_datalink.c
      ifdef SECONDARY_GPS
      ifneq (,$(findstring $(SECONDARY_GPS), datalink))
      # this is the secondary GPS
      $(TARGET).CFLAGS += -DGPS_SECONDARY_TYPE_H=\"subsystems/gps/gps_datalink.h\"
      $(TARGET).CFLAGS += -DSECONDARY_GPS=GPS_DATALINK
      else
      $(TARGET).CFLAGS += -DGPS_TYPE_H=\"subsystems/gps/gps_datalink.h\"
      $(TARGET).CFLAGS += -DPRIMARY_GPS=GPS_DATALINK
      endif
      else
      # plain old single GPS usage
      $(TARGET).CFLAGS += -DGPS_TYPE_H=\"subsystems/gps/gps_datalink.h\"
      endif
ap.srcs += $(SONAR_DIR)/sonar_bebop.c
ap.CFLAGS += -DUSE_ADC0=1
ap.CFLAGS += -DUSE_SPI0=1
      include $(CFG_SHARED)/spi_master.makefile
ap.CFLAGS += -DUSE_IMU
ap.srcs += subsystems/imu.c
ap.CFLAGS += -DIMU_TYPE_H=\"subsystems/imu/imu_bebop.h\"
ap.CFLAGS += -DUSE_I2C2
ap.CFLAGS += -DBEBOP_MPU_I2C_DEV=i2c2
ap.CFLAGS += -DUSE_I2C1
ap.CFLAGS += -DBEBOP_MAG_I2C_DEV=i2c1
ap.srcs += subsystems/imu/imu_bebop.c
ap.srcs += peripherals/ak8963.c
ap.srcs += peripherals/mpu60x0_i2c.c
ap.srcs += peripherals/mpu60x0.c
ap.CFLAGS += -DUSE_$(BEBOP_ACTUATORS_I2C_DEV_UPPER)
ap.CFLAGS += -DBEBOP_ACTUATORS_I2C_DEV=$(BEBOP_ACTUATORS_I2C_DEV_LOWER)
ap.CFLAGS += -DACTUATORS
ap.srcs += $(SRC_BOARD)/actuators.c
ap.CFLAGS += -DUSE_MOTOR_MIXING
ap.srcs += subsystems/actuators/motor_mixing.c
ap.CFLAGS += -DRADIO_CONTROL_TYPE_H=\"subsystems/radio_control/rc_datalink.h\"
ifneq ($(RADIO_CONTROL_DATALINK_LED),none)
ap.CFLAGS += -DRADIO_CONTROL_DATALINK_LED=$(RADIO_CONTROL_DATALINK_LED)
endif
ifneq ($(RADIO_CONTROL_LED),none)
ap.CFLAGS += -DRADIO_CONTROL_LED=$(RADIO_CONTROL_LED)
endif
ifeq (,$(findstring $(SEPARATE_FBW),1 TRUE))
ap.CFLAGS += -DRADIO_CONTROL_TYPE_DATALINK
ap.CFLAGS += -DRADIO_CONTROL
ap.srcs += subsystems/radio_control/rc_datalink.c
ap.srcs += subsystems/radio_control.c
endif
ap.CFLAGS += -DDATALINK=PPRZ
ap.CFLAGS += -DDOWNLINK_TRANSPORT=pprz_tp
ap.CFLAGS += -DPPRZ_UART=$(MODEM_DEV_LOWER)
ap.CFLAGS += -DDOWNLINK_DEVICE=$(MODEM_DEV_LOWER)
ap.CFLAGS += -DPERIODIC_TELEMETRY
ap.CFLAGS += -DDOWNLINK
ap.CFLAGS += -D$(MODEM_DEV_UPPER)_BROADCAST=$(MODEM_BROADCAST)
ap.CFLAGS += -D$(MODEM_DEV_UPPER)_PORT_IN=$(MODEM_PORT_IN)
ap.CFLAGS += -D$(MODEM_DEV_UPPER)_PORT_OUT=$(MODEM_PORT_OUT)
ap.CFLAGS += -D$(MODEM_DEV_UPPER)_HOST=$(MODEM_HOST)
ap.CFLAGS += -DUSE_$(MODEM_DEV_UPPER)
ap.srcs += pprzlink/src/pprz_transport.c
ap.srcs += subsystems/datalink/telemetry.c
ap.srcs += subsystems/datalink/datalink.c
ap.srcs += subsystems/datalink/downlink.c
ap.srcs += $(DATALINK_DIR)/pprz_dl.c
      include $(CFG_SHARED)/udp.makefile
ap.srcs += $(SRC_FIRMWARE)/rotorcraft_telemetry.c
ap.srcs += $(SRC_FIRMWARE)/rotorcraft_datalink.c

endif # end of target 'ap'


####################################################
# makefile target 'nps' for firmware 'rotorcraft'
####################################################

ifeq ($(TARGET), nps)

../BOARDS/BEBOP_DIR = modules/../boards/bebop
ACTUATORS_DIR = modules/actuators
AHRS_DIR = modules/ahrs
COMPUTER_VISION_DIR = modules/computer_vision
DATALINK_DIR = modules/datalink
FDM_DIR = modules/fdm
GPS_DIR = modules/gps
GUIDANCE_DIR = modules/guidance
IMU_DIR = modules/imu
INS_DIR = modules/ins
LOGGERS_DIR = modules/loggers
MAV_COURSE_EXERCISE_DIR = modules/mav_course_exercise
NAV_DIR = modules/nav
POSE_HISTORY_DIR = modules/pose_history
RADIO_CONTROL_DIR = modules/radio_control
SONAR_DIR = modules/sonar
STABILIZATION_DIR = modules/stabilization

USE_MAGNETOMETER = FALSE

include $(PAPARAZZI_SRC)/conf/boards/pc.makefile
include $(PAPARAZZI_SRC)/conf/firmwares/rotorcraft.makefile

USE_MAGNETOMETER ?= 1
GPS_LED ?= none
GPS_LED ?= none
GPS_LED ?= none
RADIO_CONTROL_DATALINK_LED ?= none
RADIO_CONTROL_LED ?= none
MODEM_BROADCAST ?= TRUE
MODEM_PORT_IN ?= 4243
MODEM_PORT_OUT ?= 4242
MODEM_DEV ?= UDP0
MODEM_DEV_LOWER = $(shell echo $(MODEM_DEV) | tr A-Z a-z)
MODEM_DEV_UPPER = $(shell echo $(MODEM_DEV) | tr a-z A-Z)

$(TARGET).CFLAGS += -DCOLOR_OBJECT_DETECTOR_CR_MAX1=249
$(TARGET).CFLAGS += -DCOLOR_OBJECT_DETECTOR_CR_MIN1=134
$(TARGET).CFLAGS += -DCOLOR_OBJECT_DETECTOR_CB_MAX1=121
$(TARGET).CFLAGS += -DCOLOR_OBJECT_DETECTOR_CB_MIN1=53
$(TARGET).CFLAGS += -DCOLOR_OBJECT_DETECTOR_LUM_MAX1=183
$(TARGET).CFLAGS += -DCOLOR_OBJECT_DETECTOR_LUM_MIN1=41
$(TARGET).CFLAGS += -DFILE_LOGGER_PATH=/tmp/paparazzi/log
$(TARGET).CFLAGS += -DVIDEO_CAPTURE_PATH=/tmp/paparazzi/images
$(TARGET).CFLAGS += -DARRIVED_AT_WAYPOINT=0.5
$(TARGET).CFLAGS += -DVIEWVIDEO_QUALITY_FACTOR=40
$(TARGET).CFLAGS += -DVIEWVIDEO_DOWNSIZE_FACTOR=1
$(TARGET).CFLAGS += -DVIEWVIDEO_CAMERA2=bottom_camera
$(TARGET).CFLAGS += -DVIEWVIDEO_CAMERA=front_camera
$(TARGET).CFLAGS += -DMAX_TRACK_CORNERS=10
$(TARGET).CFLAGS += -DOPTICFLOW_DEROTATION_CORRECTION_FACTOR_Y=0.85
$(TARGET).CFLAGS += -DOPTICFLOW_DEROTATION_CORRECTION_FACTOR_X=0.8
$(TARGET).CFLAGS += -DOPTICFLOW_CORNER_METHOD=0
$(TARGET).CFLAGS += -DOPTICFLOW_SUBPIXEL_FACTOR=200
$(TARGET).CFLAGS += -DOPTICFLOW_MAX_TRACK_CORNERS=10
$(TARGET).CFLAGS += -DMAX_HORIZON=10
$(TARGET).CFLAGS += -DOPTICFLOW_CAMERA=front_camera
$(TARGET).CFLAGS += -DCOLOR_OBJECT_DETECTOR_DRAW1=1
$(TARGET).CFLAGS += -DCOLOR_OBJECT_DETECTOR_FPS1=0
$(TARGET).CFLAGS += -DCOLOR_OBJECT_DETECTOR_CAMERA1=front_camera
$(TARGET).CFLAGS += -DVIDEO_CAPTURE_FPS=10
$(TARGET).CFLAGS += -DVIDEO_CAPTURE_CAMERA=front_camera
$(TARGET).CFLAGS += -DAHRS_USE_GPS_HEADING=TRUE

nps.srcs += nps/nps_fdm_gazebo.cpp
      nps.CXXFLAGS += $(shell pkg-config gazebo --cflags)
      nps.LDFLAGS  += $(shell pkg-config gazebo --libs)
      NPS_DEBUG_VIDEO ?= 0
      ifeq (,$(findstring $(NPS_DEBUG_VIDEO),0 FALSE))
        nps.CXXFLAGS += -DNPS_DEBUG_VIDEO
        nps.CXXFLAGS += $(shell pkg-config opencv)
        nps.LDFLAGS  += -lopencv_imgproc -lopencv_highgui -lopencv_core
      endif
nps.CFLAGS += -Imodules/computer_vision
nps.srcs += modules/computer_vision/lib/encoding/rtp.c
nps.srcs += $(COMPUTER_VISION_DIR)/viewvideo.c
      include $(CFG_SHARED)/udp.makefile
      VIEWVIDEO_HOST        ?= $(MODEM_HOST)
      VIEWVIDEO_PORT_OUT    ?= 5000
      VIEWVIDEO_PORT2_OUT   ?= 6000
      VIEWVIDEO_BROADCAST   ?= TRUE
      VIEWVIDEO_USE_NETCAT  ?= FALSE
      VIEWVID_CFLAGS  = -DVIEWVIDEO_HOST=$(VIEWVIDEO_HOST) -DVIEWVIDEO_PORT_OUT=$(VIEWVIDEO_PORT_OUT) -DVIEWVIDEO_PORT2_OUT=$(VIEWVIDEO_PORT2_OUT)
      ifneq (,$(findstring $(VIEWVIDEO_USE_NETCAT),0 FALSE))
        ap.CFLAGS += $(VIEWVID_CFLAGS) -DVIEWVIDEO_BROADCAST=$(VIEWVIDEO_BROADCAST)
        nps.CFLAGS += $(VIEWVID_CFLAGS) -DVIEWVIDEO_BROADCAST=FALSE
      else
        $(TARGET).CFLAGS += $(VIEWVID_CFLAGS) -DVIEWVIDEO_USE_NETCAT
      endif
nps.srcs += $(POSE_HISTORY_DIR)/pose_history.c
nps.CFLAGS += -DNPS_SIMULATE_VIDEO=1
nps.CFLAGS += -Imodules/computer_vision
nps.LDFLAGS += -lpthread
nps.srcs += modules/computer_vision/lib/encoding/jpeg.c
nps.srcs += modules/computer_vision/lib/vision/image.c
nps.srcs += $(COMPUTER_VISION_DIR)/cv.c
nps.srcs += $(COMPUTER_VISION_DIR)/video_thread_nps.c
nps.srcs += $(SONAR_DIR)/agl_dist.c
nps.CFLAGS += -Imodules/computer_vision
nps.srcs += modules/computer_vision/lib/vision/undistortion.c
nps.srcs += modules/computer_vision/lib/vision/edge_flow.c
nps.srcs += modules/computer_vision/lib/vision/lucas_kanade.c
nps.srcs += modules/computer_vision/lib/vision/fast_rosten.c
nps.srcs += modules/computer_vision/lib/vision/act_fast.c
nps.srcs += math/pprz_matrix_decomp_float.c
nps.srcs += math/pprz_algebra_float.c
nps.srcs += modules/computer_vision/opticflow/linear_flow_fit.c
nps.srcs += modules/computer_vision/opticflow/size_divergence.c
nps.srcs += modules/computer_vision/opticflow/opticflow_calculator.c
nps.srcs += $(COMPUTER_VISION_DIR)/opticflow_module.c
nps.srcs += modules/computer_vision/lib/encoding/rtp.c
nps.srcs += modules/computer_vision/lib/encoding/jpeg.c
nps.srcs += modules/computer_vision/lib/vision/image.c
nps.srcs += $(COMPUTER_VISION_DIR)/cv_detect_color_object.c
nps.srcs += $(COMPUTER_VISION_DIR)/video_capture.c
nps.CFLAGS += -DUSE_I2C0
nps.CFLAGS += -DI2C_BUF_LEN=56
nps.srcs += boards/bebop/isp/libisp.c
nps.srcs += $(../BOARDS/BEBOP_DIR)/mt9f002_nps.c
nps.srcs += $(../BOARDS/BEBOP_DIR)/mt9v117_nps.c
nps.srcs += $(MAV_COURSE_EXERCISE_DIR)/mav_exercise.c
nps.srcs += $(LOGGERS_DIR)/file_logger.c
nps.CFLAGS += -DUSE_VFF_EXTENDED
nps.CFLAGS += -DINS_TYPE_H=\"subsystems/ins/ins_int.h\"
nps.srcs += subsystems/ins/vf_extended_float.c
nps.srcs += subsystems/ins/ins_int.c
nps.srcs += subsystems/ins.c
nps.CFLAGS += -DUSE_AHRS_ALIGNER
nps.CFLAGS += -DUSE_AHRS
ifneq ($(AHRS_ALIGNER_LED),none)
nps.CFLAGS += -DAHRS_ALIGNER_LED=$(AHRS_ALIGNER_LED)
endif
ifeq (,$(findstring $(USE_MAGNETOMETER),0 FALSE))
nps.CFLAGS += -DUSE_MAGNETOMETER
endif
nps.srcs += subsystems/ahrs/ahrs_int_cmpl_quat_wrapper.c
nps.srcs += subsystems/ahrs/ahrs_int_cmpl_quat.c
nps.srcs += subsystems/ahrs/ahrs_aligner.c
nps.srcs += subsystems/ahrs.c
ifdef SECONDARY_AHRS
ifneq (,$(findstring $(SECONDARY_AHRS), icq int_cmpl_quat))
# this is the secondary AHRS
$(TARGET).CFLAGS += -DAHRS_SECONDARY_TYPE_H=\"subsystems/ahrs/ahrs_int_cmpl_quat_wrapper.h\"
$(TARGET).CFLAGS += -DSECONDARY_AHRS=ahrs_icq
else
# this is the primary AHRS
$(TARGET).CFLAGS += -DAHRS_TYPE_H=\"subsystems/ahrs/ahrs_int_cmpl_quat_wrapper.h\"
$(TARGET).CFLAGS += -DPRIMARY_AHRS=ahrs_icq
endif
else
# plain old single AHRS usage
$(TARGET).CFLAGS += -DAHRS_TYPE_H=\"subsystems/ahrs/ahrs_int_cmpl_quat_wrapper.h\"
endif
nps.srcs += $(SRC_FIRMWARE)/guidance/guidance_flip.c
nps.srcs += $(SRC_FIRMWARE)/guidance/guidance_v_adapt.c
nps.srcs += $(SRC_FIRMWARE)/guidance/guidance_v_ref.c
nps.srcs += $(SRC_FIRMWARE)/guidance/guidance_v.c
nps.srcs += $(SRC_FIRMWARE)/guidance/guidance_h_ref.c
nps.srcs += $(SRC_FIRMWARE)/guidance/guidance_h.c
nps.CFLAGS += -DUSE_NAVIGATION
nps.srcs += subsystems/navigation/waypoints.c
nps.srcs += subsystems/navigation/common_flight_plan.c
nps.srcs += $(SRC_FIRMWARE)/navigation.c
nps.srcs += $(SRC_FIRMWARE)/stabilization/stabilization_none.c
nps.srcs += $(SRC_FIRMWARE)/stabilization.c
nps.CFLAGS += -DUSE_STABILIZATION_RATE_INDI=true
nps.CFLAGS += -DUSE_STABILIZATION_RATE
nps.srcs += $(SRC_FIRMWARE)/stabilization/stabilization_rate_indi.c
nps.CFLAGS += -DSTABILIZATION_ATTITUDE_INDI_SIMPLE=true
nps.CFLAGS += -DSTABILIZATION_ATTITUDE_TYPE_H=\"stabilization/stabilization_attitude_quat_indi.h\"
nps.CFLAGS += -DSTABILIZATION_ATTITUDE_TYPE_INT
nps.srcs += $(SRC_FIRMWARE)/stabilization/stabilization_attitude_rc_setpoint.c
nps.srcs += $(SRC_FIRMWARE)/stabilization/stabilization_attitude_quat_transformations.c
nps.srcs += $(SRC_FIRMWARE)/stabilization/stabilization_attitude_quat_indi.c
nps.srcs += $(SRC_FIRMWARE)/stabilization/stabilization_indi_simple.c
ifneq ($(GPS_LED),none)
nps.CFLAGS += -DGPS_LED=$(GPS_LED)
endif
nps.CFLAGS += -DUSE_GPS
nps.srcs += subsystems/gps.c
nps.CFLAGS += -DGPS_TYPE_H=\"subsystems/gps/gps_sim_nps.h\"
nps.srcs += subsystems/gps/gps_sim_nps.c
nps.CFLAGS += -DUSE_IMU
nps.srcs += subsystems/imu.c
nps.CFLAGS += -DIMU_TYPE_H=\"subsystems/imu/imu_nps.h\"
nps.srcs += subsystems/imu/imu_nps.c
nps.CFLAGS += -DUSE_MOTOR_MIXING
nps.srcs += subsystems/actuators/motor_mixing.c
nps.CFLAGS += -DRADIO_CONTROL_TYPE_H=\"subsystems/radio_control/rc_datalink.h\"
ifneq ($(RADIO_CONTROL_DATALINK_LED),none)
nps.CFLAGS += -DRADIO_CONTROL_DATALINK_LED=$(RADIO_CONTROL_DATALINK_LED)
endif
ifneq ($(RADIO_CONTROL_LED),none)
nps.CFLAGS += -DRADIO_CONTROL_LED=$(RADIO_CONTROL_LED)
endif
nps.CFLAGS += -DRADIO_CONTROL_TYPE_DATALINK
nps.CFLAGS += -DRADIO_CONTROL
nps.srcs += subsystems/radio_control/rc_datalink.c
nps.srcs += subsystems/radio_control.c
nps.CFLAGS += -DDATALINK=PPRZ
nps.CFLAGS += -DDOWNLINK_TRANSPORT=pprz_tp
nps.CFLAGS += -DPPRZ_UART=$(MODEM_DEV_LOWER)
nps.CFLAGS += -DDOWNLINK_DEVICE=$(MODEM_DEV_LOWER)
nps.CFLAGS += -DPERIODIC_TELEMETRY
nps.CFLAGS += -DDOWNLINK
nps.CFLAGS += -D$(MODEM_DEV_UPPER)_BROADCAST=$(MODEM_BROADCAST)
nps.CFLAGS += -D$(MODEM_DEV_UPPER)_PORT_IN=$(MODEM_PORT_IN)
nps.CFLAGS += -D$(MODEM_DEV_UPPER)_PORT_OUT=$(MODEM_PORT_OUT)
nps.CFLAGS += -D$(MODEM_DEV_UPPER)_HOST=$(MODEM_HOST)
nps.CFLAGS += -DUSE_$(MODEM_DEV_UPPER)
nps.srcs += pprzlink/src/pprz_transport.c
nps.srcs += subsystems/datalink/telemetry.c
nps.srcs += subsystems/datalink/datalink.c
nps.srcs += subsystems/datalink/downlink.c
nps.srcs += $(DATALINK_DIR)/pprz_dl.c
      include $(CFG_SHARED)/udp.makefile
nps.srcs += $(SRC_FIRMWARE)/rotorcraft_telemetry.c
nps.srcs += $(SRC_FIRMWARE)/rotorcraft_datalink.c

endif # end of target 'nps'

